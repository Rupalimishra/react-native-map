{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"./index","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _index = _$$_REQUIRE(_dependencyMap[3], \"./index\");\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  var Types = {\n    Array: 'array',\n    Bool: 'boolean',\n    Number: 'number',\n    String: 'string',\n    HashMap: 'hashmap'\n  };\n\n  var BridgeValue = function () {\n    function BridgeValue(rawValue) {\n      (0, _classCallCheck2.default)(this, BridgeValue);\n      this.rawValue = rawValue;\n    }\n\n    (0, _createClass2.default)(BridgeValue, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        return {\n          type: this.type,\n          value: this.value\n        };\n      }\n    }, {\n      key: \"type\",\n      get: function get() {\n        if (Array.isArray(this.rawValue)) {\n          return Types.Array;\n        } else if ((0, _index.isBoolean)(this.rawValue)) {\n          return Types.Bool;\n        } else if ((0, _index.isNumber)(this.rawValue)) {\n          return Types.Number;\n        } else if ((0, _index.isString)(this.rawValue)) {\n          return Types.String;\n        } else if (this.rawValue && typeof this.rawValue === 'object') {\n          return Types.HashMap;\n        } else {\n          throw new Error('[type] BridgeValue must be a primitive/array/object');\n        }\n      }\n    }, {\n      key: \"value\",\n      get: function get() {\n        var type = this.type;\n        var value;\n\n        if (type === Types.Array) {\n          value = [];\n\n          for (var _iterator = _createForOfIteratorHelperLoose(this.rawValue), _step; !(_step = _iterator()).done;) {\n            var innerRawValue = _step.value;\n            var bridgeValue = new BridgeValue(innerRawValue);\n            value.push(bridgeValue.toJSON());\n          }\n        } else if (type === Types.HashMap) {\n          value = [];\n          var stringKeys = Object.keys(this.rawValue);\n\n          for (var _i = 0, _stringKeys = stringKeys; _i < _stringKeys.length; _i++) {\n            var stringKey = _stringKeys[_i];\n            value.push([new BridgeValue(stringKey).toJSON(), new BridgeValue(this.rawValue[stringKey]).toJSON()]);\n          }\n        } else if (type === Types.Bool || type === Types.Number || type === Types.String) {\n          value = this.rawValue;\n        } else {\n          throw new Error('[value] BridgeValue must be a primitive/array/object');\n        }\n\n        return value;\n      }\n    }]);\n    return BridgeValue;\n  }();\n\n  exports.default = BridgeValue;\n});","lineCount":95,"map":[[13,0,1,0],[21,0,3,0],[21,6,3,6,"Types"],[21,11,3,11],[21,14,3,14],[22,0,4,2,"Array"],[22,4,4,2,"Array"],[22,9,4,7],[22,11,4,9],[22,18,3,14],[23,0,5,2,"Bool"],[23,4,5,2,"Bool"],[23,8,5,6],[23,10,5,8],[23,19,3,14],[24,0,6,2,"Number"],[24,4,6,2,"Number"],[24,10,6,8],[24,12,6,10],[24,20,3,14],[25,0,7,2,"String"],[25,4,7,2,"String"],[25,10,7,8],[25,12,7,10],[25,20,3,14],[26,0,8,2,"HashMap"],[26,4,8,2,"HashMap"],[26,11,8,9],[26,13,8,11],[27,0,3,14],[27,3,3,0],[29,6,11,21,"BridgeValue"],[29,17],[30,0,12,2],[30,25,12,14,"rawValue"],[30,33,12,2],[30,35,12,24],[31,0,12,24],[32,0,13,4],[32,11,13,9,"rawValue"],[32,19,13,4],[32,22,13,20,"rawValue"],[32,30,13,4],[33,0,14,3],[37,31,67,11],[38,0,68,4],[38,15,68,11],[39,0,69,6,"type"],[39,10,69,6,"type"],[39,14,69,10],[39,16,69,12],[39,21,69,17,"type"],[39,25,68,11],[40,0,70,6,"value"],[40,10,70,6,"value"],[40,15,70,11],[40,17,70,13],[40,22,70,18,"value"],[41,0,68,11],[41,9,68,4],[42,0,72,3],[45,26,16,13],[46,0,17,4],[46,12,17,8,"Array"],[46,17,17,13],[46,18,17,14,"isArray"],[46,25,17,8],[46,26,17,22],[46,31,17,27,"rawValue"],[46,39,17,8],[46,40,17,4],[46,42,17,38],[47,0,18,6],[47,17,18,13,"Types"],[47,22,18,18],[47,23,18,19,"Array"],[47,28,18,6],[48,0,19,5],[48,9,17,4],[48,15,19,11],[48,19,19,15],[48,41,19,25],[48,46,19,30,"rawValue"],[48,54,19,15],[48,55,19,11],[48,57,19,41],[49,0,20,6],[49,17,20,13,"Types"],[49,22,20,18],[49,23,20,19,"Bool"],[49,27,20,6],[50,0,21,5],[50,9,19,11],[50,15,21,11],[50,19,21,15],[50,40,21,24],[50,45,21,29,"rawValue"],[50,53,21,15],[50,54,21,11],[50,56,21,40],[51,0,22,6],[51,17,22,13,"Types"],[51,22,22,18],[51,23,22,19,"Number"],[51,29,22,6],[52,0,23,5],[52,9,21,11],[52,15,23,11],[52,19,23,15],[52,40,23,24],[52,45,23,29,"rawValue"],[52,53,23,15],[52,54,23,11],[52,56,23,40],[53,0,24,6],[53,17,24,13,"Types"],[53,22,24,18],[53,23,24,19,"String"],[53,29,24,6],[54,0,25,5],[54,9,23,11],[54,15,25,11],[54,19,25,15],[54,24,25,20,"rawValue"],[54,32,25,15],[54,36,25,32],[54,43,25,39],[54,48,25,44,"rawValue"],[54,56,25,32],[54,61,25,57],[54,69,25,11],[54,71,25,67],[55,0,26,6],[55,17,26,13,"Types"],[55,22,26,18],[55,23,26,19,"HashMap"],[55,30,26,6],[56,0,27,5],[56,9,25,11],[56,15,27,11],[57,0,28,6],[57,16,28,12],[57,20,28,16,"Error"],[57,25,28,12],[57,26,28,22],[57,79,28,12],[57,80,28,6],[58,0,29,5],[59,0,30,3],[62,26,32,14],[63,0,33,4],[63,12,33,10,"type"],[63,16,33,14],[63,19,33,17],[63,24,33,22,"type"],[63,28,33,4],[64,0,35,4],[64,12,35,8,"value"],[64,17,35,4],[66,0,37,4],[66,12,37,8,"type"],[66,16,37,12],[66,21,37,17,"Types"],[66,26,37,22],[66,27,37,23,"Array"],[66,32,37,4],[66,34,37,30],[67,0,38,6,"value"],[67,10,38,6,"value"],[67,15,38,11],[67,18,38,14],[67,20,38,6],[69,0,40,6],[69,63,40,32],[69,68,40,37,"rawValue"],[69,76,40,6],[69,116,40,47],[70,0,40,47],[70,16,40,15,"innerRawValue"],[70,29,40,47],[71,0,41,8],[71,16,41,14,"bridgeValue"],[71,27,41,25],[71,30,41,28],[71,34,41,32,"BridgeValue"],[71,45,41,28],[71,46,41,44,"innerRawValue"],[71,59,41,28],[71,60,41,8],[72,0,42,8,"value"],[72,12,42,8,"value"],[72,17,42,13],[72,18,42,14,"push"],[72,22,42,8],[72,23,42,19,"bridgeValue"],[72,34,42,30],[72,35,42,31,"toJSON"],[72,41,42,19],[72,43,42,8],[73,0,43,7],[74,0,44,5],[74,9,37,4],[74,15,44,11],[74,19,44,15,"type"],[74,23,44,19],[74,28,44,24,"Types"],[74,33,44,29],[74,34,44,30,"HashMap"],[74,41,44,11],[74,43,44,39],[75,0,45,6,"value"],[75,10,45,6,"value"],[75,15,45,11],[75,18,45,14],[75,20,45,6],[76,0,47,6],[76,14,47,12,"stringKeys"],[76,24,47,22],[76,27,47,25,"Object"],[76,33,47,31],[76,34,47,32,"keys"],[76,38,47,25],[76,39,47,37],[76,44,47,42,"rawValue"],[76,52,47,25],[76,53,47,6],[78,0,48,6],[78,41,48,28,"stringKeys"],[78,51,48,6],[78,84,48,40],[79,0,48,11],[79,16,48,15,"stringKey"],[79,25,48,24],[79,43,48,11],[80,0,49,8,"value"],[80,12,49,8,"value"],[80,17,49,13],[80,18,49,14,"push"],[80,22,49,8],[80,23,49,19],[80,24,50,10],[80,28,50,14,"BridgeValue"],[80,39,50,10],[80,40,50,26,"stringKey"],[80,49,50,10],[80,51,50,37,"toJSON"],[80,57,50,10],[80,59,49,19],[80,61,51,10],[80,65,51,14,"BridgeValue"],[80,76,51,10],[80,77,51,26],[80,82,51,31,"rawValue"],[80,90,51,26],[80,91,51,40,"stringKey"],[80,100,51,26],[80,101,51,10],[80,103,51,52,"toJSON"],[80,109,51,10],[80,111,49,19],[80,112,49,8],[81,0,53,7],[82,0,54,5],[82,9,44,11],[82,15,54,11],[82,19,55,6,"type"],[82,23,55,10],[82,28,55,15,"Types"],[82,33,55,20],[82,34,55,21,"Bool"],[82,38,55,6],[82,42,56,6,"type"],[82,46,56,10],[82,51,56,15,"Types"],[82,56,56,20],[82,57,56,21,"Number"],[82,63,55,6],[82,67,57,6,"type"],[82,71,57,10],[82,76,57,15,"Types"],[82,81,57,20],[82,82,57,21,"String"],[82,88,54,11],[82,90,58,6],[83,0,59,6,"value"],[83,10,59,6,"value"],[83,15,59,11],[83,18,59,14],[83,23,59,19,"rawValue"],[83,31,59,6],[84,0,60,5],[84,9,54,11],[84,15,60,11],[85,0,61,6],[85,16,61,12],[85,20,61,16,"Error"],[85,25,61,12],[85,26,61,22],[85,80,61,12],[85,81,61,6],[86,0,62,5],[88,0,64,4],[88,15,64,11,"value"],[88,20,64,4],[89,0,65,3]],"functionMap":{"names":["<global>","BridgeValue","constructor","get__type","get__value","toJSON"],"mappings":"AAA;eCU;ECC;GDE;EEE;GFc;EGE;GHiC;EIE;GJK;CDC"}},"type":"js/module"}]}